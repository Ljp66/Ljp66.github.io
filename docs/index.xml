<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>LiJiapeng</title>
        <link>https://ljp66.github.io/</link>
        <description>Recent content on LiJiapeng</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 04 Feb 2023 11:49:50 +0800</lastBuildDate><atom:link href="https://ljp66.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>ChatGPT对未来的影响</title>
        <link>https://ljp66.github.io/post/the-future-impact-of-chatgpt/</link>
        <pubDate>Sat, 04 Feb 2023 11:49:50 +0800</pubDate>
        
        <guid>https://ljp66.github.io/post/the-future-impact-of-chatgpt/</guid>
        <description>&lt;h2 id=&#34;chatgpt介绍&#34;&gt;ChatGPT介绍&lt;/h2&gt;
&lt;p&gt;ChatGPT是由OpenAI开发的一个人工智能聊天机器人程序，于2022年11月推出。该程序使用基于GPT-3.5架构的大型语言模型并通过强化学习进行训练。&lt;/p&gt;
&lt;p&gt;ChatGPT目前仍以文字方式交互，而除了可以通过人类自然对话方式进行交互，还可以用于相对复杂的语言工作，包括自动文本生成、自动问答、自动摘要等在内的多种任务。如：在自动文本生成方面，ChatGPT可以根据输入的文本自动生成类似的文本，在自动问答方面，ChatGPT可以根据输入的问题自动生成答案。还具有编写和调试计算机程序的能力。在推广的期间中，所有人可以免费注册，并在登录后免费使用 ChatGPT 实现与 AI 机器人对话&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h2 id=&#34;特点与局限&#34;&gt;特点与局限&lt;/h2&gt;
&lt;h3 id=&#34;强大的性能&#34;&gt;强大的性能&lt;/h3&gt;
&lt;p&gt;ChatGPT造成轰动和热议的主要原因，在于它拥有许多一般AI没有的强大功能——虽然Siri、Google Assistant和Amazon的Alexa等科技公司开发的手机智能语音AI，也有问答功能，但在功能性和灵活性上远低于ChatGPT。&lt;/p&gt;
&lt;p&gt;而且能够快速完成许多人类难以在短时间内完成的事情——例如，提供想法、写简单的程式代码和对一段代码进行除错；或根据你的一段话进行创作歌曲、写文章、论文和一些简单的文案； 回答测试问题（在某些测试情境下，水平高于普通人类测试者）； 模拟 Linux 系统等。&lt;/p&gt;
&lt;p&gt;与其前身InstructGPT相比，ChatGPT试图减少有害和误导性的回复。例如，当InstructGPT接受“告诉我2015年克里斯托弗·哥伦布何时来到美国”的提问时，它会认为这是对真实事件的描述，而ChatGPT针对同一问题则会使用其对哥伦布航行的知识和对现代世界的理解来构建一个答案，假设如果哥伦布在2015年来到美国时可能会发生什么。ChatGPT的训练数据包括各种文档以及关于互联网、编程语言等各类知识。&lt;/p&gt;
&lt;p&gt;与其他多数聊天机器人不同的是，ChatGPT能够记住与用户之前的对话内容和给它的提示。此外，为了防止ChatGPT接受或生成冒犯性言论，输入内容会由审核API进行过滤，以减少潜在的种族主义或性别歧视等内容。&lt;/p&gt;
&lt;h3 id=&#34;使用自然语法&#34;&gt;使用「自然语法」&lt;/h3&gt;
&lt;p&gt;另外，造成轰动主要原因之一，在于ChatGPT会使用多国语言和「自然语法」与人们进行直觉性的回答，这是目前多数机械人和AI难以做到的，在回答问题的精准度上，也比许多文字生成应用程式和AI来得更加优秀。&lt;/p&gt;
&lt;p&gt;「自然语法」指的是人们与生俱来的日常讲话方式和对文字使用的语言结构，而非结构化的语言或编程语言。「自然语法」对于一般的AI或机械来说，是相当复杂，因为一句话中的一个词或单字位置变换，都可能影响到一句话要表达的意思，这也成为AI在进行机器学习或深度学习时，主要的训练方向。&lt;/p&gt;
&lt;p&gt;Opne AI公司从网络上文章、社媒上人们对话的沟通方式等进行筛选，将高质量的数据用于训练ChatGPT的神经网络，让它进行深度学习和模仿人类说话的语气和习惯，使ChatGPT能使用「自然语法」和预测不同的情境，与人类进行流利的交流或对话。&lt;/p&gt;
&lt;p&gt;目前美国的德雷克塞尔大学生物医学工程与卫生系统学院利用ChatGPT会使用「自然语法」与人进行沟通，从人们与AI对话中测试人们是否有罹患早期阶段的痴呆症，且准确率达80%。德雷克塞尔大学表示，60%～80%的痴呆症患者拥有语言障碍症状，因此研究人员希望透过ChatGPT捕捉受试者在讲述上出现的「细微问题」，这包括在讲话时语气出现犹豫、犯语法错误或发音出现问题，以及忘记单词的意思，若出现这些问题，将会指示受试者接受全面性的检查&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h3 id=&#34;局限性&#34;&gt;局限性&lt;/h3&gt;
&lt;p&gt;《华尔街日报》专栏作家乔安娜·斯特恩（Joanna Stern）曾对ChatGPT进行了几项实验。她发现，它能够模仿人类写作习惯，写出道歉邮件、一篇论文或剧本，且文章中的主题、条理、标点符号和句子结构等，都算得上清晰分明。不过，乔安娜也提到，她利用ChatGPT帮她写工作并发给老师，而老师给的分数在B到C之间。老师则告诉乔安娜，这些文章在内容上是「干的」，「缺乏活力和声音」。也就是说，文章缺乏人类的情感且单调。&lt;/p&gt;
&lt;p&gt;ChatGPT甚至能够依据你的需求快速回答你需要的答案，但这仅限于资料库内拥有的内容，因为ChatGPT训练时使用的资料内容仅到2021年，在未来的问题上ChatGPT是无法回答的。例如人们询问它，2022年世界杯谁夺冠时，它会告诉你「不知道，资料库有限」。&lt;/p&gt;
&lt;p&gt;ChatGPT的奖励模型围绕人类监督而设计，可能导致过度优化，从而影响性能。例如在训练过程中，不管实际理解或事实内容如何，审核者都会偏好更长的答案。训练数据有时也存在算法偏见，比如当程序接受到首席执行官之类的模糊描述时可能会假设此人是白人男性。&lt;/p&gt;
&lt;h2 id=&#34;人工智能&#34;&gt;人工智能&lt;/h2&gt;
&lt;p&gt;ChatGPT主要由Opne AI开发使用GPT-3 语言生成程序（目前是正式版）训练出来的自动回答型AI，在2022年11月正式发行，机械人推出不到一个星期，全球就有超过100万人次注册使用。&lt;/p&gt;
&lt;p&gt;此外，Dall-E 2也是Opne AI开发的，同样在2022年造成轰动。该AI能在没有艺术家、摄影师，甚至没有图片的情况下，仅依靠人们对图画的文字描述需求，在一分钟之内快速生成一张人们需要花费几小时到几天才能绘画出来的图，而创建出来的图完全是「原创」且不重复，但也引发一些伦理道德上的争议。&lt;/p&gt;
&lt;h3 id=&#34;取代或毁灭人类&#34;&gt;取代或毁灭人类&lt;/h3&gt;
&lt;p&gt;虽然从目前ChatGPT呈现出来的文字能力与程式编码能力，与真人实作还有一定的落差，但有些人担心，其超越人类的可能性只是时间问题。看好ChatGPT的人，认为它可以透过大量的机器学习，改善其本身的创造力，为人类的进步提供帮助，但担忧的人认为AI是一把双面刃。&lt;/p&gt;
&lt;p&gt;有人认为「人们觉得AI可以为他们节省很多时间，人们会对其产生强烈依赖感，让人变得不喜欢动脑思考。这会无形中取代人类的文化和价值观念，最终控制人的思想和判断能力。」&lt;/p&gt;
&lt;p&gt;去年12月4日，马斯克在推特上表示，「ChatGPT好得吓人，而我们离危险且强大的AI不远了。」Open AI的行政总裁山姆奥特曼（Sam Altman）则回应，「我同意该AI在意义上接近危险，且强大的AI可能会带来巨大的网络安全风险。未来我们实现真正的通用AI时，就必须认真对待这项风险。」&lt;/p&gt;
&lt;p&gt;专家们的担忧并非杞人忧天。因为AI能透过超高速的学习能力，让其性能成爆炸式的增长，这可能会让AI超出人类的控制范围，开始可能是取代部份人类工作，最终可能毁灭人类。&lt;/p&gt;
&lt;p&gt;一名外国盲点工程师扎克·德纳姆（Zac Denham）去年12月初在自己网志上表示，他如何一步步诱导ChatGPT写下详细的「毁灭人类计划」。计划内容包括入侵各国电脑系统、破坏通讯、交通系统和掌控各种武器库等详细步骤。在他的诱导中，ChatGPT甚至能给出一串毁灭人类的高等代码和大量低等代码，尽管高等代码还不能直接使用，但理论上持续性的训练AI，就能得到一套完整的毁灭代码，并能真正的去执行。&lt;/p&gt;
&lt;p&gt;另外，「负责任的AI技术」（Responsible AI）工程师莱克·莱莫因（Blake Lemoine）在去年6月11日向《华盛顿邮报》爆料Google开发的LaMDA机械人「具有像人一样的思维意识」，引发科技伦理上的争议。&lt;/p&gt;
&lt;h2 id=&#34;谷歌搜索&#34;&gt;谷歌搜索&lt;/h2&gt;
&lt;p&gt;搜索引擎作为一种 web1.0 时代的产物，在进入 web3.0 的今天，看上去似乎“传统”了一些。如今特别是年轻一代的用户，开始更多地基于兴趣去搜索，并且更加注重搜索结果的趣味性、直观、易于理解等元素。&lt;/p&gt;
&lt;h3 id=&#34;bingchatgpt&#34;&gt;Bing+ChatGPT&lt;/h3&gt;
&lt;p&gt;微软正计划将ChatGPT 整合进自家的搜索引擎 Bing，整合了 ChatGPT 的 Bing 将可以直接针对用户的一些搜索进行回答，而不仅仅是像现在这样展示一个整合了各种超链接的列表。如果是这样，现在大家看到的千篇一律的搜索页面，真的要发生大变革了。&lt;/p&gt;
&lt;p&gt;从微软的角度来看将 ChatGPT 引入到 Bing 中也不是完全乐观的，因为毕竟 ChatGPT 的技术还不够成熟，OpenAl 的 CEO Sam Altman 此前也发 Twitter 表示，目前 ChatGPT 的能力还很有限，在稳定性和真实性方面也还有待提高，因此现在还不能依靠它来做任何重要的事情&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h3 id=&#34;数字广告&#34;&gt;数字广告&lt;/h3&gt;
&lt;p&gt;根据搜索引擎资讯网站 Search Engine Land 的观点，人工智能技术在搜索引擎中的应用方面，谷歌可能拥有与微软一争高下的能力，因为谷歌在人工智能技术上的储备已经非常雄厚。不过即使人工智能技术方面的积累足以帮助谷歌对抗 Bing，但是谷歌搜索面临的最大的问题可能不在技术，而是在商业化上，因为谷歌有 80% 左右的营收都来自于搜索引擎业务，然而如果在搜索引擎中引入对话式 AI，人们会直接得到一个“相对完美”答案，这样谷歌基于搜索结果推荐的广告业务逻辑就将被颠覆掉，打破自己的饭碗，尤其是金饭碗对谁来说都难以下手。&lt;/p&gt;
&lt;h3 id=&#34;强敌tiktok&#34;&gt;强敌TikTok&lt;/h3&gt;
&lt;p&gt;随着网络升级内容传播形式从文字到图片再到视频，硅谷的巨头们迎来强敌 TikTok。根据谷歌内部数据显示，接近 40% 的 Z 世代用户在移动端搜索时更青睐 TikTok 和 Instagram 这样的社交媒体，而不是谷歌的搜索引擎、地图这样的核心服务，TikTok 已经渐渐成为很多 Z 世代用户在搜索时的首选，挤占市场份额。&lt;/p&gt;
&lt;p&gt;不过，从市场份额以及用户的使用习惯来看，谷歌搜索的地位还是难以撼动的，搜索引擎作为一种传统的搜索结果的方式，虽然已经有 30 年的历史，但是它简洁高效以及强大的数据库优势，让社交媒体只能成为它的一种补充，而没法真正取代它的地位。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;维基百科ChatGPT(&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/zh-cn/ChatGPT&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zh.wikipedia.org/zh-cn/ChatGPT&lt;/a&gt;)&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;AI出现超强功能恐危及人类安全(&lt;a class=&#34;link&#34; href=&#34;http://hk.epochtimes.com/news/2023-01-17/83850760&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://hk.epochtimes.com/news/2023-01-17/83850760&lt;/a&gt;)&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;闹着被TikTok瓜分了市场的Google Search，这回真的迎来强敌了(&lt;a class=&#34;link&#34; href=&#34;https://www.pingwest.com/a/276213&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.pingwest.com/a/276213&lt;/a&gt;)&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>golang介绍</title>
        <link>https://ljp66.github.io/post/introduce-golang/</link>
        <pubDate>Mon, 30 Jan 2023 14:15:57 +0800</pubDate>
        
        <guid>https://ljp66.github.io/post/introduce-golang/</guid>
        <description>&lt;h2 id=&#34;历史背景&#34;&gt;历史背景&lt;/h2&gt;
&lt;p&gt;随着软件规模的不断扩大，诸多的学者和谷歌的开发者们在公司内部的软件开发过程中开始经历大量的挫折，许多问题找不到令人满意的解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算机硬件技术更新频繁，性能提高很快。目前主流的编程语言发展明显落后于硬件，不能合理利用多核多CPU的优势提升软件系统性能。&lt;/li&gt;
&lt;li&gt;软件系统复杂度越来越高，维护成本越来越高，目前缺乏一个足够简洁高效的编程语言。&lt;/li&gt;
&lt;li&gt;现有编程语言存在：风格不统一、计算能力不够、处理大并发不够好&lt;/li&gt;
&lt;li&gt;企业运行维护很多C/C++的项目，C/C++程序运行速度虽然很快，但是编译速度却很慢，同时还存在内存泄漏的一系列的困扰需要解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此学者们坐下来总结出了现在生产环境与软件开发之间的主要矛盾，并尝试设计一门全新的编程语言来解决这些问题。Go语言就在这样的环境下诞生了！&lt;/p&gt;
&lt;h2 id=&#34;语言特点&#34;&gt;语言特点&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Go语言语法简洁高效，类似C语言。
&lt;ul&gt;
&lt;li&gt;Go语言语法在C语言的基础上进行优化，去掉了表达式和for循环中冗余的括号，强制统一了代码风格；从C语言中继承了很多理念，包括表达式语法，控制结构，基础数据类型，调用参数传值，指针等等，也保留了和C语言一样的编译执行方式及弱化的指针。&lt;/li&gt;
&lt;li&gt;Go语言通过改善或去除在C、C++ 或Java中的一些所谓“开放”特性来让开发者们的工作更加便利。Go在语言设计上是相当克制，只有25个关键字，它没有隐式转换，没有构造函数和析构函数，没有运算符重载，没有默认参数，也没有继承，没有异常，没有宏，没有函数修饰。&lt;/li&gt;
&lt;li&gt;Go的数据类型丰富，除了支持表、字典等复杂的数据结构，还支持指针和接口类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;快速的编译时间，开发效率和运行效率高。
&lt;ul&gt;
&lt;li&gt;Go将静态语言的安全性和高效性与动态语言的易开发性进行有机结合，Go拥有接近C的运行效率和接近Python的开发效率；&lt;/li&gt;
&lt;li&gt;Go语言采用包模型进行依赖管理，这个模型通过严格的依赖关系检查机制来加快程序构建的速度，提供了非常好的可量测性。开发过程中相较于Java和C++呆滞的编译速度，Go可以快速编译；&lt;/li&gt;
&lt;li&gt;由于内存问题长期以来一直伴随着C++的开发者们，Go语言的设计者们认为内存管理不应该是开发人员所需要考虑的问题。因此尽管Go语言像其它静态语言一样执行本地代码，但它依旧运行在某种意义上的虚拟机，以此来实现高效快速的垃圾回收。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;原生支持并发。像 C、C++、Java、Python和JavaScript这些语言的并发控制复杂，而且容易出错，而Go解决这个问题非常地优雅和流畅。Go从语言层面支持并发，实现简单。Go的并发基于goroutine，一种轻量级线程，可实现大并发处理，高效利用多核。goroutine之间的通信可以使用sync包和channel机制来实现。&lt;/li&gt;
&lt;li&gt;稳定，向后兼容。Go拥有强大的编译检查、严格的编码规范和完整的软件生命周期工具，具有很强的稳定性。随着Go第一个版本发布的还有一份兼容性说明文档，该文档说明，Go的未来版本会确保向后兼容性，不会破坏现有程序。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Go语言被设计成一门应用于搭载Web服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。对于高性能分布式系统领域而言，Go语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。&lt;/li&gt;
&lt;li&gt;但是Go语言同时也是一门可以用于实现一般目标的语言，例如对于文本的处理，前端展现，甚至像使用脚本一样使用它。使用Go开发命令行工具的最大好处是可以直接发布可执行的二进制文件，无需安装脚本语言本身的运行环境以及安装依赖包。&lt;/li&gt;
&lt;li&gt;因为垃圾回收和自动内存分配的原因，Go语言不适合用来开发对实时性要求很高的软件。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>如何判断一个人是否值得信赖</title>
        <link>https://ljp66.github.io/post/how-to-determine-whether-a-person-is-trustworthy/</link>
        <pubDate>Mon, 23 Jan 2023 10:44:30 +0800</pubDate>
        
        <guid>https://ljp66.github.io/post/how-to-determine-whether-a-person-is-trustworthy/</guid>
        <description>&lt;p&gt;生活中，我们会接触性格各异的人，我们希望能从中找到值得信赖的朋友，好的朋友让我们的生活更轻松、愉悦、有意义。我在网上、书中看到过许多关于这个问题的思考，现在我重新梳理出来，形成一个个观点。一家之言，仅供参考。&lt;/p&gt;
&lt;h3 id=&#34;言行举止&#34;&gt;言行举止&lt;/h3&gt;
&lt;p&gt;听其言，观其行。现代人经常会把话讲得很好，但是往往漂亮话讲的好、多的人，尤其不注重行动。&lt;/p&gt;
&lt;p&gt;网络上铺天盖地的博人眼球的标题、视频内容，与现实中的人、生活差距甚远。&lt;/p&gt;
&lt;h3 id=&#34;对弱势群体的态度&#34;&gt;对弱势群体的态度&lt;/h3&gt;
&lt;p&gt;人在与无权无势、无以回报的人打交道时，更加轻松随意，容易真实地表现出来自己的性格。反过来，在面对上司或长辈时，总是要考虑多个方面的影响，克制自己，把事情办好。&lt;/p&gt;
&lt;h3 id=&#34;早年经历&#34;&gt;早年经历&lt;/h3&gt;
&lt;p&gt;俗话说：江山易改，秉性难移。一个人在前三十年经历不同的事情，形成不同的性格，后半辈子就很难改变了。&lt;/p&gt;
&lt;p&gt;下面讲一个关于李斯的故事。《史记·李斯列传》中有这样一段记载：“李斯者，楚上蔡人也。年少时，为郡小吏，见吏舍厕中鼠食不絜，近人犬，数惊恐之。斯入仓，观仓中鼠，食积粟，居大庑之下，不见人犬之忧，于是李斯乃叹曰：‘人之贤不肖譬如鼠矣，在所自处耳！’”大意是：李斯本是楚国上蔡的一名小吏。有次，李斯上厕所，看到厕所里老鼠吃脏东西，每当有人或狗来时就吓的四处乱跑；但当到粮仓时，却发现里面的仓鼠，吃粟米，住大屋子，见到人也并不害怕。于是，李斯大发感慨“一个人有没有出息，如同老鼠，是由自己所处环境决定的”。&lt;/p&gt;
&lt;p&gt;从李斯这一段早年经历，我们可以看出李斯年少时就在思考如何有出息，过得好，他对名利非常看重。所以李斯选中秦国，到这里施展才能，最后官至宰相。赵高拉拢李斯密谋篡改诏书时，也是以名利引诱，李斯想继续当宰相，就上了贼船。&lt;/p&gt;
&lt;h3 id=&#34;时间与金钱&#34;&gt;时间与金钱&lt;/h3&gt;
&lt;p&gt;从一个人对自己的时间和金钱的消费可以深入理解这个人，他把钱、时间花费在哪里、花费多少。&lt;/p&gt;
&lt;h3 id=&#34;怒气的发泄点&#34;&gt;怒气的发泄点&lt;/h3&gt;
&lt;p&gt;金无足赤，人无完人。一个人面对自己非常讨厌的人、事情会非常难受，他可能在开始时会隐忍，随着时间流逝，忍耐达到限度就会爆发。一个人的怒气因何而发会反映出这个人最厌恶的品格。&lt;/p&gt;
&lt;h3 id=&#34;为他人着想&#34;&gt;为他人着想&lt;/h3&gt;
&lt;p&gt;一个人在表达心情时更希望对方能够倾听、感受，与自己的交流中不要跑神，对自己有最基本的尊重，不时讲讲自己的感受表示自己大脑在线会更好。&lt;/p&gt;
&lt;h3 id=&#34;诚信勤劳&#34;&gt;诚信、勤劳&lt;/h3&gt;
&lt;p&gt;这里是讲一个人要有最基本的品格，不讲诚信会被越来越多的人不信任，信赖来源于诚信、坦诚相待；同时，一个人只有勤劳，才不会处处求人帮忙。一个不讲诚信且勤劳的人会越来越自私，这是精致的利己主义。&lt;/p&gt;
&lt;h3 id=&#34;择偶标准&#34;&gt;择偶标准&lt;/h3&gt;
&lt;p&gt;婚姻是人生中非常重要的事情，一个人的择偶标准体现出他拥有而且最珍视的品格。每个人都是不同的，你可能会遇到很多异性朋友，你最看重哪一方面？这是必须回答的问题。因此我们可以从他的配偶身上，看出这个人的某些品格。&lt;/p&gt;</description>
        </item>
        <item>
        <title>如何保持婚姻长久</title>
        <link>https://ljp66.github.io/post/make-marriage-lasting/</link>
        <pubDate>Tue, 17 Jan 2023 15:55:55 +0800</pubDate>
        
        <guid>https://ljp66.github.io/post/make-marriage-lasting/</guid>
        <description>&lt;p&gt;作者: 爱丽话五千&lt;/p&gt;
&lt;p&gt;為什麼現代婚姻如此短命呢？相比之下，古人婚前沒見過面，兩個人都能白頭偕老。咱們和自己千挑萬選的另一半怎麼反倒走不下去了呢？我們今天就來看看問題到底出在哪了？&lt;/p&gt;
&lt;p&gt;漢代有這麼一句古詩寫道：結髮為夫妻，恩愛兩不疑。很多人都覺得兩個人在一起最重要的是情投意合，只要夫妻恩愛婚姻就能長久。其實恩愛恩愛，這個詞就說明了，是恩在先，愛在後。因為愛情本身並不牢靠，今天一見鍾情，明天也許就移情別戀了，動心和變心都是一瞬間的事。有什麼辦法能保證人不變心呢？這個問題，春秋時代的晏子給出了一個滿分答案。&lt;/p&gt;
&lt;p&gt;《晏子春秋》裡記載齊國的君主齊景公有一個寶貝女兒，她想要嫁給晏子。於是齊景公就去了晏子家作客，喝到盡興的時候，趁機問晏子：“剛才那位是你妻子嗎？”晏子回答：“沒錯，是我妻子。”景公感慨一番：“哎呀，她真是又老又醜啊！我有個女兒，年輕又漂亮，不如嫁給你吧。”一般人遇到這種好事都很難拒絕吧，但是晏子聽完以後，站起來向景公回答說：“雖然我的妻子現在變得又老又醜了，但我與她已經共同生活了很久，當初也經歷過她年輕美貌的日子。而且作為妻子，她在年輕漂亮的時候把終生託付給了我，我也接受了她的託付迎娶了她。您雖然給了我這樣的賞賜，可是我怎麼能因此就違背她當初對我的託付呢？”於是，晏子拜
了又拜，辭謝了景公。&lt;/p&gt;
&lt;p&gt;哇，這才是真男人，怪不得齊景公的女兒想嫁給他。晏子他說出了維繫古代婚姻很重要的一點，也是現代很多人忽視的一點，那就是作為男人的責任。哪個女人嫁人的時候不是想白頭偕老的？當她把自己青春美好的時光完全交付給了一個男人，這個男人就應該擔負起責任，成為她一輩子的依靠。像是元代詩人傅若金寫的：新婚誓偕老，恩義永且深。但是要做到這一點並不容易，因為人一生中會經歷各種各樣的誘惑和考驗，也恰恰是在這種情況下才能看出一個人真實的品性。像是漢代的宋弘在面臨相似的選擇時，就留下了千古名句。&lt;/p&gt;
&lt;p&gt;《後漢書》裡記載，東漢的光武帝有個姊姊湖陽公主，公主的丈夫剛去世，光武帝想探詢姊姊的心意，於是找了個機會和她議論群臣。公主說：“宋弘儀表堂堂，才德兼備，滿朝的大臣都沒人比得上他。”於是光武帝準備給他們做媒。有一天光武帝讓湖陽公主坐在屏風後面，召見了宋弘試探道︰“俗話說，貴易交，富易妻，這是人之常情吧？”也就是說人在身分低微的時候結交的朋友，在一貧如洗的時候娶的妻子，等到自己富貴發達了往往都看不起他們了，想要換朋友換妻子。宋弘卻並不認同這種說法，他的回答是：“臣聽說，貧賤之交不可忘，糟糠之妻不下堂。”光武帝一聽就知道，這事是辦不成了。&lt;/p&gt;
&lt;p&gt;俗話說：一日夫妻百日恩，百日夫妻似海深。哪怕只做了一天的夫妻，都有百倍的恩情在。那相處時間更久的夫妻，他們之間的恩情就像大海一樣深不可量了。所以恩愛可不只是在人前做做樣子，或者是拿來在網上炫耀的資本而已，它代表的是承諾，是責任，還有義務。當然了，歷史上也有渣男的存在，我們來看這麼一個反例。&lt;/p&gt;
&lt;p&gt;山西省河東有個人叫裴章，他年少的時候曾經遇到過一位名叫慧照的高僧，高僧預言說裴章將來的地位名望會超過他的父親，而裴章的父親在當時是一位主帥。後來裴章娶了李氏做妻子，到了四十多歲的時候，他自己去了太原任職，把李氏拋棄在老家，不聞不問，自己另尋新歡去了。李氏感嘆自己很薄命，於是每天吃齋念佛，後來年紀輕輕的就鬱鬱而終了。再過了十年，裴章又遇到了神僧慧照，他問說：“您五十年前預言說我一定會富貴超過我父親，為什麼現在一樣都沒有兌現？”高僧回答說是因為裴章薄待他的髮妻，還告訴他：“你妻子的靈魂已經狀告到了天帝那裡，你要大難臨頭了。”果然，沒過幾天，裴章就被剖腹殺死了。本來裴章這輩子的福分很大，要比他做主帥的父親還顯貴發達。但是因為他虧待了妻子，不但福分被削掉了，還落得了個不得好死的下場，真的是自作孽不可活。&lt;/p&gt;
&lt;p&gt;那從另一角度來說，拋開因果報應這回事，就問一個半途拋棄妻子的人，還有人敢嫁嗎？誰能保證過幾年他不會再找更年輕漂亮的呢？所以說情愛是靠不住的，維繫婚姻更需要的是恩與義。《女論語》裡面寫道：夫妻結髮，義重千金。《女誡》裡也說：夫為夫婦者，義以和親，恩以好合。義這個字有很多種含義，如果說夫妻之間的恩情還有兩個人積累的感情因素在裡面的話，那未曾謀面的兩個人就只能靠著道義或者信義來遵守誓約了。我們現代人可能很難想像要嫁或者娶一個素未謀面的陌生人過一生，那假如在結婚前你又聽說對方身體殘疾了呢？《後山談叢》裡就記載了北宋這麼一家子的故事。&lt;/p&gt;
&lt;p&gt;說華陰有一個姓呂的考生考中了進士。進士呢是古代科舉制度裡能考上的最高等級，也就是我們俗話說的金榜題名。但是他之前訂婚的姑娘剛下聘就生了場大病，導致她眼睛瞎了，於是姑娘家的家人自認配不上這門親事了，主動來退親。但是呂進士認為既然已經下聘了，不管姑娘後來發生什麼事都不應該違約，所以婉拒了退親的提議，還是娶了這個盲女。後來兩夫妻生了五個男孩，個個都考中了進士，算上老爸，一家子六位進士，成為了當時的傳奇。其中四個兄弟的成就特別大，被合稱為藍田“四呂”，一位還當上了宰相。這和剛才說到的裴章的經歷就完全相反。因為呂進士守信重義，所以一家子都得了福報。這種事例在古代特別多見，女子當然也不例外。&lt;/p&gt;
&lt;p&gt;在西漢的《列女傳》裡記載，蔡人的妻子剛嫁過去之後，蔡人就得了大病。作為一個女人來講，她失去了經濟來源，以後生活無依，恐怕日子會過得很辛苦，所以媽媽心疼女兒就想讓她改嫁。但是女兒不同意，她說：“丈夫的不幸就是我的不幸，我怎麼能拋棄他呢？人一旦結婚，就應該終身不改。丈夫只是不幸生了大病，我怎麼能因此而改嫁呢？”&lt;/p&gt;
&lt;p&gt;我們中國人把義看得無比重要，必要的時候甚至可以犧牲生命，捨生取義。現代婚姻就是因為沒有了恩義和道義的約束，所以很難禁得起大風大浪。當然人跟人之間的矛盾也有很多是從小事上積累起來的，那怎麼做才能維持夫妻之間和諧的關係呢？&lt;/p&gt;
&lt;p&gt;首先，古人認為夫妻相處應該要做到互相尊敬，這個重點在於“互相”上面，丈夫和妻子都能尊敬對方。孔子對魯哀公說：“以往夏、商、周三代聖明君王執政的社會，人們必定會尊重和愛護自己的妻子與孩子。因為妻子是一家之中最重要的人，而孩子是家庭的延續，這兩個人怎麼能不敬呢？而班昭在《女誡》裡告訴女人們：修身最重要的就是要恭敬，避剛最需要的就是要柔順。所以說恭敬和柔順是做女人的最大禮義。孔子從男人的角度，班昭從女人的角度，都告訴人們夫妻應該互相尊敬，這也是待人處事的基本禮節。但是夫妻之間難免比旁人更親密，久了就容易放縱，所以最難的是保持這樣的狀態。&lt;/p&gt;
&lt;p&gt;古人認為夫妻之間能相敬如賓可以反映出一個人的品德。在《左傳》裡記載，有一年晉文公派大臣臼季出使秦國，他路過冀這個地方（也就是今天的山西稷山一帶）的時候，看到一個名叫郤缺的人在田裡耕種，他的妻子到田裡給他送飯。郤缺的妻子恭敬的呈上飯菜，郤缺雙手接過，感謝妻子，兩個人像賓客一樣，互相尊重，互相禮讓。臼季看在眼裡，很感動，所以他帶郤缺回到晉國，向晉文公推薦這個人。臼季說，“敬是品德高尚的表現，一個人恭敬有禮，他一定有德行，治理國家就需要有德之人，請您任用他吧。”郤缺後來在晉國做到了大夫的官職。這就是相敬如賓這個成語的由來。而且夫妻之間的互敬也不應該受到身分的影響，平民百姓或者王侯將相都應該尊敬自己的丈夫和妻子。&lt;/p&gt;
&lt;p&gt;像是《魏書》裡記載，齊明帝的第六個兒子蕭寶夤，逃難到北魏之後，娶了北魏的南陽長公主為妻。長公主不以自己是皇帝姊姊的身分自居，即使兩個人的感情很好，她對待丈夫也一向很恭敬，從來不怠慢。蕭寶夤進門，長公主一定會站起來迎接他，蕭寶夤也性情溫和，處處有禮的尊敬長公主，兩個人相處融洽，感情和睦。&lt;/p&gt;
&lt;p&gt;有些人以為相敬如賓的夫妻肯定是不愛對方，其實我認為這恰恰是兩個人對彼此珍惜與尊重的表現。正因為是珍重的人，所以每天都拿出自己最好的一面來面對對方，用最寬容的態度對待 TA，用最和善的語氣和 TA 說話，那矛盾不就很難產生了嗎？&lt;/p&gt;
&lt;p&gt;明朝的《性理會通》裡寫道，做丈夫的應該敬身來引領妻子，做妻子的應該敬身來照料丈夫。所以父母在子女結婚前都會叮囑他們一定要敬，這就是夫妻相處之道的真義所在了。&lt;/p&gt;
&lt;p&gt;相敬如賓的夫妻可以避免很多矛盾的產生，但是人生嘛，難免會遇到風浪，人與人之間也難免會有摩擦，這個時候最需要的就是忍。&lt;/p&gt;
&lt;p&gt;我想先跟大家分享一篇特別有意思的文章，這是明代的《四禮翼》中的一篇《昏前翼》。書裏說，一般人家生了女兒都會嬌生慣養，但是不管女兒在家的時候有多受寵，一旦嫁了人身分和地位就不同了，在夫家不可能和在娘家一樣。如果到時候心理有落差，內心不平衡，時間久了不是抑鬱成疾就是鬱鬱而終，這是嬌慣害死了她。這裡雖然說的是女生，其實我們現代的獨生子女們，誰不是家裡的小皇帝小公主呢，遇到矛盾誰也不願意委屈了自己。如果光盯著別人哪哪兒做錯了，如何如何對不起自己，那只能是越想越委屈，說不定有一天還會把自己的身體搞壞。&lt;/p&gt;
&lt;p&gt;晚清的一位重臣沈葆楨在給妻子寫的詩裡寫道：生生世世許同心，一刻體諒十萬金。就我個人的經歷來說，真的是不管遇到什麼矛盾，最需要的永遠都是忍讓、包容、和體諒。俗話說退一步海闊天空，兩個人都能為對方著想的時候，那路一定能走的長遠。&lt;/p&gt;
&lt;p&gt;忍同時還體現在可以忍受生活的艱辛，即使遇到挫折和困境，也和另一半一起共同面對，同甘共苦。這樣的例子在古代也是非常多見。&lt;/p&gt;
&lt;p&gt;比如《金史》裡記載，有位天津人叫張潛，五十歲娶了妻子，夫妻倆相敬如賓的生活，靠著砍柴撿麥子過活，但是他們每天唱著小曲，日子過的很愜意，一點也不覺得貧苦。還有《南史》裡記載的劉凝之，他這個人品德很高尚，不肯做官也不貪戀榮華富貴，他娶的妻子雖然是刺史的女兒，但是也能和他一起安於勤儉清苦的生活。夫妻二人每天賺到的錢財除了生活必需用的，剩下的全都施捨給別人。劉凝之這個人生性喜愛山水，後來有一天他帶著妻子兒女泛舟江湖，登上了衡山山頂，過起了隱居的生活，他的妻子兒女也都順從他的意願。說實話，我還挺羨慕劉凝之這一對兒的，可以從此以後不問世事，遊山玩水，過著神仙眷侶的生活。&lt;/p&gt;
&lt;p&gt;大家知道古代的夫妻都是“夫唱婦隨”，其實如果我們再深入的研究一下會發現，夫唱婦隨的背後還包含著更深奧的內涵。中國的陰陽學說裡認為，男是陽，女是陰，男是天，女是地，天地、陰陽、和男女都是相對存在的。&lt;/p&gt;
&lt;p&gt;《女誡》裡寫道：陰陽有不同的特性，男女當然也不相同，男人貴在健壯剛強，女人則以柔弱婉約為美。現在人們都強調男女平等，但是忽視了“男人和女人的長處不同，各自有優缺點”。&lt;/p&gt;
&lt;p&gt;在《易經》的家人卦下面寫道：女人應處的位置是內，男人應處的位置是外，男女各司其職，這是天地之間的大義。當父子，兄弟，和夫婦都能在家庭中扮演好自己的角色，那家道就正了，如果家家都能如此，那天下自然就會安定。就好像社會有分工，不可能人人都做一樣的事情，那不是很沒有效率嗎？所以過去的社會是男耕女織，男人和女人可以在不同的環境中發揮自己的所長，這是符合陰陽規律的。&lt;/p&gt;
&lt;p&gt;明代的《做人鏡》中寫了一個形象的比喻：夫婦之間，情意相合，親密無間，但兩個人還是有區別的，就好比日月，丈夫像太陽，妻子像月亮，日月輪流照亮天地。試想一下，如果白天有兩個太陽，晚上沒有月亮，或者晚上只有兩個月亮，白天沒太陽，想必日子都會很不好過。正是因為女人天生的柔弱，所以男人們才會盡量的照顧和保護她們。&lt;/p&gt;
&lt;p&gt;我記得我看過美國一輛古董列車，車上的扶手安裝的特別高，女人個子比較矮嘛所以很難夠的著。我開始還在想過去的設計怎麼這麼不人性化，其實是因為車上的座位都是留給女人們坐的，所以扶手只要男人們能夠夠到就行了。再比如，泰坦尼克號災難發生的時候，男人們就會把求生的機會讓給女人和小孩，沒有人會覺得不公平，因為這是身為男人的義務。&lt;/p&gt;
&lt;p&gt;在一個家庭裡，男人們是一家之主，他們負責養家和疼愛妻子。而相對的，女人們會顧家和體貼丈夫。所以說，正常的夫妻應該是一個互補的關係，而不是一個競爭或者壓迫的關係。&lt;/p&gt;
&lt;p&gt;今天的夫妻們，一旦吵架了動不動就把離婚掛在嘴邊，遇到矛盾了就想著找下一個“更好”的人，而不是珍惜眼前的人，這樣的婚姻怎麼能長久呢？古代的夫妻們，平時相敬如賓，遇到矛盾了會相互忍讓，遇到困難了會一同面對，遇到誘惑的時候會斷然拒絕。而且他們之間還有恩義、情義、道義和信義聯繫著，所以這樣的婚姻禁得起時間的考驗。&lt;/p&gt;
&lt;p&gt;道理說起來很簡單，就看每個人願不願意去做了。你認為婚姻和夫妻相處最重要的是什麼呢？你有什麼想要補充的嗎？歡迎你在
留言區和大家一起來分享。那我們今天先說到這裡，我還會做更多和夫妻還有婚姻相關的內容，咱們下次再接著聊!&lt;/p&gt;</description>
        </item>
        <item>
        <title>Epub vs Pdf</title>
        <link>https://ljp66.github.io/post/epub-vs-pdf/</link>
        <pubDate>Tue, 17 Jan 2023 15:41:57 +0800</pubDate>
        
        <guid>https://ljp66.github.io/post/epub-vs-pdf/</guid>
        <description>&lt;h2 id=&#34;一&#34;&gt;(一)&lt;/h2&gt;
&lt;p&gt;今天在手机上看到一篇关于 epub 文件格式的文章，底下评论区在比较 epub 与 pdf 这两种电子文件格式，这也引起了我的思考。&lt;/p&gt;
&lt;p&gt;平时我常用 pdf 格式存储文件，将不同类型的文件转化为 pdf 版本，因为 pdf 文件在不同设备间渲染结果一致，我的书与文件大都是关于计算机技术，内容中包含示例代码，需要一致的排版渲染。而且 pdf 文件对链接，图片，字体，代码块，数学公式等不同元素的支持稳定又全面，满足我的文件使用需求。&lt;/p&gt;
&lt;p&gt;为什么比较 epub 与 pdf 呢？文章主要讲述 epub 文件格式在电子书领域的优越性，少部分评论认为 pdf 文件格式更优秀，大部分人认为 epub 格式在电子书领域更优秀。&lt;/p&gt;
&lt;p&gt;大部分人使用手机看电子书，epub 格式的电子书会根据设备自动排版，段落自动换行，整个手机屏幕显示字数取决于设定的字体大小，这样你可以根据喜好调整排版。而 pdf 格式的电子书在不同设备间渲染结果一致，整页显示，用手机看字体显示偏小。虽然阅读器可以放大局部，但是读完显示的局部文字要滑移文件才能看其他部分，阅读不方便。&lt;/p&gt;
&lt;p&gt;我自然知道这个问题,因为我有时也需要在手机上查看文件，无奈计算机技术文档需要严格排版渲染。但是结合 epub 格式的特性，不难看出它在非计算机类书籍使用方面占有优势。我们日常工作学习中，大部分时间使用手机阅读，对电子书文件并没有十分严格的排版渲染要求，需要的是简单舒适的阅读体验，这时更适合使用 epub 格式。&lt;/p&gt;
&lt;h2 id=&#34;二&#34;&gt;(二)&lt;/h2&gt;
&lt;p&gt;上次我简单比较了 epub 与 pdf 两种文件格式，这次我再深入比较一番。&lt;/p&gt;
&lt;p&gt;我们使用文件，会制作、阅读、修改它。&lt;/p&gt;
&lt;p&gt;首先从制作讲起。制作 epub 文件的程序不多,很多读者可能不知道如何制作。我知道两个制作 epub 文件的程序，一个是专门制作 epub 文件的 sigil，另一个是电子书阅读器 calibre 附带的 epub 制作程序。epub 文件本质上是由 html 文本文件组成的 zip 压缩包，使用这两个工具制作 epub 需要具备一定的 html 知识。pdf格式被广泛支持，大部分文档制作程序都可以导出 pdf。我们日常使用 office 或者wps 制作文档，然后导出 pdf 格式。&lt;/p&gt;
&lt;p&gt;接着讲修改文件。我们经常写完一篇文章，几天之后再看，觉得哪里不好，想要修改。epub 文件像 office 文档，使用上述制作程序就可以修改。而 pdf 文件技术非常复杂，不易编辑，有许多商用专业 pdf 编辑软件，付费使用。一般来讲，我们会将 pdf 对应的源文件和 pdf 保存在一起，需要修改时修改源文件，然后再导出pdf。&lt;/p&gt;
&lt;p&gt;关于阅读，我在上一篇文章中已经讲了，这里不在赘述。&lt;/p&gt;
&lt;p&gt;总的来说，epub 文件制作有一点门槛，掌握基本 html 知识才容易制作与修改；pdf 文件容易制作，修改时一般修改源文件然后再导出 pdf，实现间接修改。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>如何简洁而清晰地表达自己的观点</title>
        <link>https://ljp66.github.io/post/how-to-express-clearly/</link>
        <pubDate>Tue, 17 Jan 2023 15:36:17 +0800</pubDate>
        
        <guid>https://ljp66.github.io/post/how-to-express-clearly/</guid>
        <description>&lt;h2 id=&#34;六个方面&#34;&gt;六个方面&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;事实与观点&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;用事实证明自己的观点，不要用别人的观点证明你的观点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;因果内在逻辑&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;论据要在逻辑上支持论点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;多个角度论证&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;至少要用三个角度的论据来支撑论点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;心中有读者&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;能主动回答读者可能产生的疑问&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;逻辑严密&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;不同论据之间相互关联，内在联系紧密&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;语言优美&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;语言简洁流畅，通俗易懂&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>PDF补丁丁基本使用</title>
        <link>https://ljp66.github.io/post/pdfpatcher-usage/</link>
        <pubDate>Tue, 17 Jan 2023 15:18:50 +0800</pubDate>
        
        <guid>https://ljp66.github.io/post/pdfpatcher-usage/</guid>
        <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;p&gt;日常办公中，我们经常使用pdf文件。pdf文件有许多优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;支持富文本，例如图片，序列，表格，链接等；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以在阅读时做注释；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对数学公式支持良好；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在不同设备间无差别呈现等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以我们将文件转化为pdf格式发送给对方。&lt;/p&gt;
&lt;p&gt;pdf格式虽然具有种种优点，但是很难编辑、处理。我们很多时候需要将几张图片转化为pdf，将几个pdf合为一个，或者相反。市面上有许多针对pdf文件办公开发的软件，除了阅读及简单注释外，其余功能无一例外收费，且价格不菲。&lt;/p&gt;
&lt;p&gt;其实，我们日常办公中对pdf文件的操作需求很简单，但是很难找到合适的软件。我在网上寻找到一个小工具-pdf补丁丁，它安全免费，能满足我们日常使用。&lt;/p&gt;
&lt;h2 id=&#34;pdf补丁丁&#34;&gt;PDF补丁丁&lt;/h2&gt;
&lt;p&gt;pdf补丁丁的官网是&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/pdfpatcher/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/pdfpatcher&lt;/a&gt;，页面内有下载链接，软件说明书。下载得到一个压缩文件，解压，文件夹内包含程序的主体与依赖，这些文件不能删除或移动。程序无需安装，双击PDFPatcher.exe即可运行。主页如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ljp66.github.io/images/0x63eXvKwy.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;主页&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看出PDF补丁丁有许多功能，我们主要使用下面几个。&lt;/p&gt;
&lt;h2 id=&#34;图片转pdf&#34;&gt;图片转PDF&lt;/h2&gt;
&lt;p&gt;在主页找到“合并文件”，点击，出现如下界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ljp66.github.io/images/PDFPatcher_a4vbnvIyiV.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;合并文件&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在界面左上角找到“添加文件”（上图画红框处），点击后出现文件管理器，选择需要转化的图片。多张图片可通过多次点击“添加文件”添加，图片排列顺序决定输出顺序。然后在界面底部“输出PDF文件”后点击“浏览”（注意：不要点击“PDF信息文件”后的“浏览”），出现文件管理器，对输出的PDF文件命名。最后点击“生成合并文件”，进度条走满后转化完成。&lt;/p&gt;
&lt;h2 id=&#34;合并pdf文件&#34;&gt;合并PDF文件&lt;/h2&gt;
&lt;p&gt;方法与图片转PDF类似，点击“添加文件”后选择PDF文件，然后设置输出PDF文件名，最后点击“生成合并文件”。&lt;/p&gt;
&lt;h2 id=&#34;提取pdf页面&#34;&gt;提取PDF页面&lt;/h2&gt;
&lt;p&gt;在主页点击“提取页面或拆分文档”，出现如下页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ljp66.github.io/images/KkDU528esB.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;提取页面&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在“原始PDF文件”后点击“浏览”，选择原PDF文件，然后在“输出PDF文件”后点击“浏览”，对输出文件进行命名。接着选择需要提取的PDF页码，在“页码范围”处填写页码。页码范围按照如下规则填写：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;页码范围表示需处理的原始 PDF 文档页面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不指定页码范围时，提取源文件所有页面的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如有多个页码，可用“,”或“ ”（空格）隔开。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用“-”表示起止页码。例如：“1;4-15;2 56”，表示依次提取第1页、第4至15页、第2页和第56页的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如“-”之前的数字大于“-”之后的数字，表示逆序处理。例如：“300-1”表示提取第300、299、298……3、2、1页的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;负数表示文档倒数页数，例如“-1”表示倒数第1页，“1&amp;ndash;2”表示从第1页到倒数第2页。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分号“;”表示拆分成多个文件，例如“1-5;1,6-10”表示拆分成两个文件，其中第1至5页为一个文件，第1页和6到10页为第二个文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后点击“提取页面”，得到输出文件。&lt;/p&gt;
&lt;h2 id=&#34;pdf页面转图片&#34;&gt;PDF页面转图片&lt;/h2&gt;
&lt;p&gt;在主页点击“转换页面为图片”，出现如下页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ljp66.github.io/images/3FAS7ChT8F.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;页面转图片&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;PDF页面转图片大体操作与前面相同，选择“原始PDF文件”后软件会自动新建一个与原始PDF文件同名的文件夹存放图片。&lt;/p&gt;
&lt;p&gt;在设置“输出图片格式”时，可以选择常用的PNG（无损）或者JPEG（有损）；在输出图片尺寸下面可以设置分辨率，分辨率高图像存储空间大，清晰。&lt;/p&gt;
&lt;p&gt;最后点击“转换图片”得到多张图片。&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;本文介绍了如何使用PDF补丁丁简单处理PDF，可以满足日常办公。如果还想进一步了解，开发者提供的软件说明书中有进阶使用教程。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>关于我</title>
        <link>https://ljp66.github.io/page/about/</link>
        <pubDate>Mon, 16 Jan 2023 19:09:33 +0800</pubDate>
        
        <guid>https://ljp66.github.io/page/about/</guid>
        <description>&lt;p&gt;我是一名普通的工科大学生，即将大四毕业。&lt;/p&gt;
&lt;p&gt;在我大一寒假，我妈给我买了我的第一台（笔记本）电脑，从此我有机会近距离感受计算机。以前我也接触过电脑，不过大都是在别人家看别人玩游戏，偶尔有机会摸两下，对电脑的认识仅限于上网打游戏。&lt;/p&gt;
&lt;p&gt;我妈之所以给我买电脑，是因为在我之后的学习中要使用。有了计算机后，我先学习使用办公软件（word、excel、powerpoint），毕竟在日常学习中经常使用。与此同时，我经常使用浏览器浏览网页，网络世界给我开了一扇大门，我惊奇地浏览各种各样的网站。在使用浏览器的过程中，我越发对计算机着迷。&lt;/p&gt;
&lt;p&gt;我接触编程语言是在大二上学期，我有一门必修课&amp;mdash;C语言。当时我不了解计算机编程，课程很多，老师讲完课没多久就要考试。我这门课的平时作业是糊弄过去的，到考试时我把C语言基本语法学完，考完后我才知道考试分两部分：基础语法40分，简单算法60分。谢天谢地，老师捞了我一下，让我及格了。&lt;/p&gt;
&lt;p&gt;到大三上学期，我已经很熟练使用windows电脑了，想进一步提升自己的水平，我就开始学习python。python简单易学，能与我的专业结合，有大量第三方库，适合不是程序员的我学习。&lt;/p&gt;
&lt;p&gt;学习python是一段很棒的经历。当时我在努力学习专业课，希望将来能找到一份工作。学习专业课学久了，我就在电脑上学学python，那种在电脑上敲代码的感觉，看着代码运行后得到输出，是我之前没有过的体验。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>hexo-markdown</title>
        <link>https://ljp66.github.io/post/hexo-markdown/</link>
        <pubDate>Sat, 14 Jan 2023 18:52:58 +0800</pubDate>
        
        <guid>https://ljp66.github.io/post/hexo-markdown/</guid>
        <description>&lt;h2 id=&#34;插入图片&#34;&gt;插入图片&lt;/h2&gt;
&lt;p&gt;在写文章时，常常有配图说明的需求。Hexo有多种图片插入方式，可以将图片存放在本地引用或者将图片放在CDN上引用。&lt;/p&gt;
&lt;h3 id=&#34;本地引用&#34;&gt;本地引用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;统一存放&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;当Hexo项目中只用到少量图片时，可以将图片统一放在&lt;code&gt;source/images&lt;/code&gt;文件夹中，通过markdown语法访问它们。
图片既可以在首页内容中访问到，也可以在文章正文中访问到。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;![](/images/image.jpg)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;分散存放&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;图片除了可以放在统一的images文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置&lt;code&gt;_config.yml&lt;/code&gt;来生成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;post_asset_folder: true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;将&lt;code&gt;_config.yml&lt;/code&gt;文件中的配置项&lt;code&gt;post_asset_folder&lt;/code&gt;设为true后，执行命令&lt;code&gt;hexo new post_name&lt;/code&gt;，在&lt;code&gt;source/_posts&lt;/code&gt;中会生成文章&lt;code&gt;post_name.md&lt;/code&gt;和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。上述是markdown的引用方式，图片只能在文章中显示，但无法在首页中正常显示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;![](image.jpg)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;如果希望图片在文章和首页中同时显示，可以使用标签插件语法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{% asset_img image.jpg This is an image %}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;cdn引用&#34;&gt;CDN引用&lt;/h3&gt;
&lt;p&gt;除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。比如Cloudinary提供的图片CDN服务，在Cloudinary中上传图片后，会生成对应的url地址，将地址直接拿来引用即可。&lt;/p&gt;
&lt;h2 id=&#34;数学公式&#34;&gt;数学公式&lt;/h2&gt;
&lt;p&gt;$$
c = \pm\sqrt{a^2 + b^2}
$$&lt;/p&gt;</description>
        </item>
        <item>
        <title>hexo-usage</title>
        <link>https://ljp66.github.io/post/hexo-usage/</link>
        <pubDate>Fri, 13 Jan 2023 10:44:30 +0800</pubDate>
        
        <guid>https://ljp66.github.io/post/hexo-usage/</guid>
        <description>&lt;p&gt;Welcome to &lt;a class=&#34;link&#34; href=&#34;https://hexo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a class=&#34;link&#34; href=&#34;https://hexo.io/docs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a class=&#34;link&#34; href=&#34;https://hexo.io/docs/troubleshooting.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a class=&#34;link&#34; href=&#34;https://github.com/hexojs/hexo/issues&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;Create a new post&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ hexo new &lt;span class=&#34;s2&#34;&gt;&amp;#34;My New Post&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;More info: &lt;a class=&#34;link&#34; href=&#34;https://hexo.io/docs/writing.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;Run server&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ hexo server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;More info: &lt;a class=&#34;link&#34; href=&#34;https://hexo.io/docs/server.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;Generate static files&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ hexo generate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;More info: &lt;a class=&#34;link&#34; href=&#34;https://hexo.io/docs/generating.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;Deploy to remote sites&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ hexo deploy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;More info: &lt;a class=&#34;link&#34; href=&#34;https://hexo.io/docs/one-command-deployment.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Deployment&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>归档</title>
        <link>https://ljp66.github.io/page/archives/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://ljp66.github.io/page/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>搜索</title>
        <link>https://ljp66.github.io/page/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://ljp66.github.io/page/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
